
# Any other monitor connected should be placed/scaled automatically.
monitor=,preferred,auto,auto

# Laptop screen.
monitor=eDP-1,preferred,1920x0,1
# Home monitor, position calculated for very smooth mouse transition between the two screens.
monitor=desc:Huawei Technologies Co. Inc. HUAWEI AD80HW,preferred,0x-150,1

# Execute apps at launch
exec-once = waybar & hyprpaper & dunst
exec-once = swayidle -w
exec-once = nm-applet
exec-once=hyprctl setcursor Catppuccin-Macchiato-Mauve 24
exec-once=/usr/lib/polkit-kde-authentication-agent-1

# Environnement variables
# -----------------------

# Use the AMD GPU first, use the NVIDIA one only if not available.
env = WLR_DRM_DEVICES,/dev/dri/card1:/dev/dri/card0

# the line below may help with multiple monitors
env = WLR_EGL_NO_MODIFIERS,0

# Set the cursor size.
env = XCURSOR_SIZE,24

# Update the theme for the platform theme.
env = QT_QPA_PLATFORMTHEME,qt5ct

# Running programs natively under Wayland
env = QT_QPA_PLATFORM,wayland-egl

# QT: Use wayland if available, fall back to x11 if not.
env = QT_QPA_PLATFORM,wayland # "wayland;xcb"

env = QT_WAYLAND_FORCE_DPI,physical
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = ECORE_EVAS_ENGINE,wayland_egl
env = ELM_ENGINE,wayland_egl
env = WLR_USE_LIBINPUT,1

# Clutter package already has wayland enabled, this variable 
# will force Clutter applications to try and use the Wayland backend
env = CLUTTER_BACKEND,wayland 

# software rendering backend 
env = WLR_RENDERER_ALLOW_SOFTWARE,1

# GTK: Use wayland if available, fall back to x11 if not.
env = GDK_BACKEND,wayland,x11

# Run SDL2 applications on Wayland. Remove or set to x11 if games that 
# provide older versions of SDL cause compatibility issues
env = SDL_VIDEODRIVER,wayland 

# Hardware acceleration on NVIDIA GPUs
# (https://wiki.archlinux.org/title/Hardware_video_acceleration)
env = LIBVA_DRIVER_NAME,nvidia

# (https://wiki.archlinux.org/title/Wayland#Requirements)
# WARN: crashes me hyprland
env = GBM_BACKEND,nvidia-drm

# To force GBM as a backend
env = __GLX_VENDOR_LIBRARY_NAME,nvidia

# Set to 1 to use software cursors instead of hardware cursors
# (https://wiki.hyprland.org/hyprland-wiki/pages/Nvidia/)
env = WLR_NO_HARDWARE_CURSORS,1

# TIP: Advantage is all the apps will be running on nvidia
# WARN: crashes whatever window's opened after "hibranate"
# env = __NV_PRIME_RENDER_OFFLOAD,1

# Controls if G-Sync capable monitors should use Variable Refresh Rate (VRR)
# See Nvidia Documentation for details.
# (https://download.nvidia.com/XFree86/Linux-32bit-ARM/375.26/README/openglenvvariables.html)
# env = __GL_GSYNC_ALLOWED,1

# Controls if Adaptive Sync should be used. Recommended to set as “0” to avoid
# having problems on some games.
# env = __GL_VRR_ALLOWED,1

# use legacy DRM interface instead of atomic mode setting. Might fix flickering issues
# env = WLR_DRM_NO_ATOMIC=1

# env = __VK_LAYER_NV_optimus,NVIDIA_only
# env = NVD_BACKEND,direct

# NOTE: this is also an nvidia specific
env = XDG_SESSION_TYPE,wayland

# XDG specific environment variables are often detected through portals and applications that may set those for you,
# however it is not a bad idea to set them explicitly.
env = XDG_SESSION_DESKTOP,Hyprland

# WARN: enabling this will cause some apps like ( Dolphin | image viewer ) to crash
# & lag the screen
env = XDG_CURRENT_DESKTOP,Hyprland

xwayland {
  force_zero_scaling = true
}

input {
    # Keyboard is in `fr` layout by default.
    # We'll bind later a script to switch between the two.
    kb_layout = fr,us
    kb_variant = azerty,intl
    
    kb_model =
    kb_options =
    # Toggle layouts using 'Win + Space'
    # kb_options = grp:win_space_toggle
    kb_rules =

    follow_mouse = 1
    accel_profile = "adaptive"

    # Start the session with numlock always on.
    numlock_by_default = yes

    touchpad {
        natural_scroll = yes
        # Scroll slower, please.
        scroll_factor = 0.4
    }

    sensitivity = 0 # No modification.
}

general {
    gaps_in = 6
    gaps_out = 10
    border_size = 2
    col.active_border = rgba(c6a0f6ff)
    col.inactive_border = rgba(363a4faa)

    layout = dwindle
    allow_tearing = false
}

decoration {
    rounding = 4
    
    blur {
        enabled = false
    }

    drop_shadow = no
}

animations {
    enabled = yes

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = true
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = off
}

misc { # Since hyprpaper is used, we prevent any default to load here.
    force_default_wallpaper = 0
    disable_hyprland_logo = true
}

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
windowrulev2 = suppressevent maximize, class:.* 
windowrulev2 = noanim, class:^(wlogout)$

# Define the main modifier to SUPER (Windows key)
$mainMod = SUPER

# Open a kitty terminal using (mainMod) + ENTER
bind = $mainMod, RETURN, exec, kitty
# Kill focused window using (mainMod) + Q
bind = $mainMod, Q, killactive, 
# Kill hyprland using (mainMod) + SHIFT + Q
bind = $mainMod SHIFT, Q, exit, 
# Open the file manager using (mainMod) + E
bind = $mainMod, E, exec, nautilus
bind = $mainMod, F, togglefloating, 
bind = $mainMod, X, exec, wofi --show drun
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, T, togglesplit, # dwindle

# Move focus with (mainMod) + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with (mainMod) + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10
# Bind same keys but for AZERTY
bind = $mainMod, ampersand, workspace, 1
bind = $mainMod, eacute, workspace, 2
bind = $mainMod, quotedbl, workspace, 3
bind = $mainMod, apostrophe, workspace, 4
bind = $mainMod, parenleft, workspace, 5
bind = $mainMod, minus, workspace, 6
bind = $mainMod, egrave, workspace, 7
bind = $mainMod, underscore, workspace, 8
bind = $mainMod, ccedilla, workspace, 9
bind = $mainMod, agrave, workspace, 10

# Fullscreen any application with (mainMod) + F11
bind = $mainMod, F11, fullscreen, 0

# Switch the current workspace to left monitor + focus.
bind = $mainMod SHIFT, left, movecurrentworkspacetomonitor, l
bind = $mainMod SHIFT, left, focusmonitor, l

# Switch the current workspace to right monitor + focus.
bind = $mainMod SHIFT, right, movecurrentworkspacetomonitor, r
bind = $mainMod SHIFT, right, focusmonitor, r

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10
# Bind same keys but for AZERTY
bind = $mainMod SHIFT, ampersand, movetoworkspace, 1
bind = $mainMod SHIFT, eacute, movetoworkspace, 2
bind = $mainMod SHIFT, quotedbl, movetoworkspace, 3
bind = $mainMod SHIFT, apostrophe, movetoworkspace, 4
bind = $mainMod SHIFT, parenleft, movetoworkspace, 5
bind = $mainMod SHIFT, minus, movetoworkspace, 6
bind = $mainMod SHIFT, egrave, movetoworkspace, 7
bind = $mainMod SHIFT, underscore, movetoworkspace, 8
bind = $mainMod SHIFT, ccedilla, movetoworkspace, 9
bind = $mainMod SHIFT, agrave, movetoworkspace, 10

# Scroll through with Windows shortcuts (ctrl + windows + arr left/right)
bind = $mainMod CTRL, right, workspace, e+1
bind = $mainMod CTRL, left, workspace, e-1

# Bind the keyboard toggler on WIN + SPACE.
# Swaps between fr (AZERTY) and us (INTL).
bind = $mainMod, SPACE, exec, ~/.config/hypr/scripts/switch_keyboard.sh

# Bind the lockscreen
bind = $mainMod, L, exec, swaylock
bind = $mainMod SHIFT, L, exec, wlogout

# Reload the whole config (hyprland + waybar)
bind = $mainMod, R, exec, killall -SIGUSR2 waybar || waybar &
bind = $mainMod, R, exec, hyprctl reload

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Bind screenshot script, on WIN + SHIFT + S
bind = $mainMod SHIFT, S, exec, ~/.config/hypr/scripts/screenshot_area.sh

# Color picker on WIN + SHIFT + C
bind = $mainMod SHIFT, C, exec, hyprpicker | wl-copy

# Bind keyboard shortcuts for volume.
bindel = , XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+
bindel = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
